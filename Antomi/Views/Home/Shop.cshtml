@model ShopVM
<!--breadcrumbs area start-->
<div class="breadcrumbs_area">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="breadcrumb_content">
                    <ul>
                        <li><a asp-controller="Home" asp-action="Index">home</a></li>
                        <li>shop</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<!--breadcrumbs area end-->
<!--shop  area start-->
<div class="shop_area shop_reverse">
    <div class="container">
        <div class="row">
            <div class="col-lg-3 col-md-12">
                <!--sidebar widget start-->
                <aside class="sidebar_widget">
                    <div class="widget_list widget_categories">
                        <h3>Product categories</h3>
                        <ul>
                            @foreach (var category in Model.Categories)
                            {
                                <li class="widget_sub_categories">
                                    <a href="javascript:void(0)">@category.Name</a>
                                    <ul class="widget_dropdown_categories">
                                        @foreach (var item in category.SubCategories)
                                        {
                                            <li onclick='ShopCategoryChange(@item.Id)'><a>@item.Name</a></li>
                                        }
                                    </ul>
                                </li>
                            }

                        </ul>
                    </div>
                    <div class="widget_list widget_filter">
                        <h3>Filter by price</h3>
                        <form >
                            <div id="slider-range"></div>
                            <button type="button" onclick='ShopFilterProducts()'>Filter</button>
                            <input type="text" name="text" id="amount" />

                        </form>
                    </div>
                    <div class="widget_list">
                        <h3>Compare Products</h3>
                        <div class="recent_product_container">
                            @foreach (var item in Model.CompareVM.CompareItems)
                            {
                                <article class="recent_product_list">
                                    <figure>
                                        <div class="product_thumb">
                                            <a class="primary_img" asp-controller="Home" asp-action="Details" asp-route-id="@item.ProductColor.Product.Id"><img src="~/image/product/@item.ProductColor.ProductColorImages.FirstOrDefault(x=>x.IsMain==true).Image" alt=""></a>
                                            <a class="secondary_img" asp-controller="Home" asp-action="Details" asp-route-id="@item.ProductColor.Product.Id"><img src="~/image/product/@item.ProductColor.ProductColorImages.FirstOrDefault(x=>x.IsMain==false).Image" alt=""></a>
                                        </div>
                                        <div class="product_content">
                                            <h4><a asp-controller="Home" asp-action="Details" asp-route-id="@item.ProductColor.Product.Id">@item.ProductColor.Product.Model</a></h4>
                                            <div class="product_rating">
                                                <ul>
                                                    <li><a href="#"><i class="ion-android-star-outline"></i></a></li>
                                                    <li><a href="#"><i class="ion-android-star-outline"></i></a></li>
                                                    <li><a href="#"><i class="ion-android-star-outline"></i></a></li>
                                                    <li><a href="#"><i class="ion-android-star-outline"></i></a></li>
                                                    <li><a href="#"><i class="ion-android-star-outline"></i></a></li>
                                                </ul>
                                            </div>
                                            <div class="price_box">
                                                @if (item.ProductColor.Discounts.FirstOrDefault(x => x.IsActive) != null)
                                                {
                                                    int discount = item.ProductColor.Discounts.FirstOrDefault(x => x.IsActive).Percent;
                                                    double price = item.ProductColor.Price * (100 - discount) / 100;

                                                    <span class="old_price">$@Math.Round(item.ProductColor.Price, 2)</span>
                                                    <span class="current_price">$@Math.Round(price, 2)</span>
                                                }
                                                else
                                                {
                                                    <span class="current_price">$@Math.Round(item.ProductColor.Price, 2)</span>
                                                }
                                            </div>
                                        </div>
                                    </figure>
                                </article>
                            }
                          
                        </div>
                    </div>
                    <div class="widget_list tags_widget">
                        <h3>Product tags</h3>
                        <div class="tag_cloud">
                            <a href="#">blouse</a>
                            <a href="#">clothes</a>
                            <a href="#">fashion</a>
                            <a href="#">handbag</a>
                            <a href="#">laptop</a>
                        </div>
                    </div>
                </aside>
                <!--sidebar widget end-->
            </div>
            <div class="col-lg-9 col-md-12">

                <!--shop banner area start-->
                <div class="shop_banner_area mb-30">
                    <div class="row">
                        <div class="col-12">
                            <div class="shop_banner_thumb">
                                <img src="~/assets/img/bg/banner16.jpg" alt="">
                            </div>
                        </div>
                    </div>
                </div>
                <!--shop banner area end-->
                <!--shop toolbar start-->
                <div class="shop_toolbar_wrapper">
                    <div class="shop_toolbar_btn">
                        <button data-role="grid_4" type="button" class=" active btn-grid-4" data-toggle="tooltip" title="4"></button>
                        <button data-role="grid_list" type="button" class="btn-list" data-toggle="tooltip" title="List"></button>
                    </div>
                    <div class="">
                        <select class="form-select" aria-label="Default select example" name="orderby" id="shortId">
                            <option value="1">Sort by popularity</option>
                            <option value="2">Sort by newness</option>
                            <option value="3">Sort by price: low to high</option>
                            <option value="4">Sort by price: high to low</option>
                        </select>
                    </div>
                    <div class="page_amount">
                      
                        <p>Showing 1–9 of 21 results</p>
                    </div>
                </div>
                <!--shop toolbar end-->
                <!--shop wrapper start-->
                <div class="row no-gutters shop_wrapper shopcategoryChng">
                    @await Html.PartialAsync("_ShopProductPartialView")

                    <!--aaaaa-->


                </div>

                <div class="shop_toolbar t_bottom">
                    <div class="pagination">
                        <ul>
                            <li class="current">1</li>
                            <li><a href="#">2</a></li>
                            <li><a href="#">3</a></li>
                            <li class="next"><a href="#">next</a></li>
                            <li><a href="#">>></a></li>
                        </ul>
                    </div>
                </div>
                <!--shop toolbar end-->
                <!--shop wrapper end-->
            </div>
        </div>
    </div>
</div>
<!--shop  area end-->
@section Script{
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js" referrerpolicy="no-referrer"></script>
    <script>

        function CartLoad() {
            $.ajax({
                url: '/Home/GetCartPartial',
                contentType: 'application/html; charset=utf-8',
                type: 'GET',
                dataType: 'html',

                success: function (result) {
                    $('.DivaddtocartId').empty();
                    $('.DivaddtocartId').append(result);

                },
                error: function (xhr, status) {
                    alert(status);
                }
            })


        }

        async function AddtoBasket(colorID) {
            var quantity = 1;
            console.log(colorID)
            console.log(quantity)

            let checkajax = await $.ajax({
                url: "/Home/AddtoBasket",
                type: "Post",
                data: {
                    ColorId: parseInt(colorID),
                    Quantity: parseInt(quantity)
                },
                success: function () {
                    //  let resobject = jQuery.parseJSON(data);
                    console.log("success AddtoCart")
                },
                error: function () {
                    alert('Failed to receive the Data');
                    console.log('Failed ');
                }
            });
            if (checkajax) CartLoad();

        }
        //DivaddtocartId
        function ActiveToggle() {
            var element = document.getElementById("isactiveId");
            element.classList.toggle("active");

        }


        function WishlistLoad() {
            $.ajax({
                url: '/Product/GetWishlistPartial',
                contentType: 'application/html; charset=utf-8',
                type: 'GET',
                dataType: 'html',

                success: function (result) {
                    $('.wishlist_load').empty();
                    $('.wishlist_load').append(result);

                },
                error: function (xhr, status) {
                    alert(status);
                }
            })


        }
        async function AddtoWishlist(colorId) {

            console.log(colorId)
            let checkajax = await $.ajax({
                url: "/Product/AddWishlist",
                type: "Post",
                data: {
                    ColorID: parseInt(colorId)
                },
                success: function () {
                    //  let resobject = jQuery.parseJSON(data);
                    console.log("success AddtoCart")
                },
                error: function () {
                    alert('Failed to receive the Data');
                    console.log('Failed ');
                }
            });
            if (checkajax) WishlistLoad();
        }

        async function AddtoCompare(colorId) {

       
            console.log(colorId)
            let checkajax = await $.ajax({
                url: "/Product/AddCompare",
                type: "Post",
                data: {
                    ColorID: parseInt(colorId)
                },
                success: function () {
                    //  let resobject = jQuery.parseJSON(data);
                    console.log("success AddtoCart")
                },
                error: function () {
                    alert('Failed to receive the Data');
                    console.log('Failed ');
                }
            });
        }

        async function DeleteCartItem(itemId) {
            console.log(itemId)
            let checkajax = await $.ajax({
                url: "/Home/DeleteBasketItem",
                type: "Post",
                data: {
                    itemID: parseInt(itemId)
                },
                success: function () {
                    //  let resobject = jQuery.parseJSON(data);
                    console.log("success AddtoCart")
                },
                error: function () {
                    alert('Failed to receive the Data');
                    console.log('Failed ');
                }
            });
            if (checkajax) CartLoad();
        }


        function ModalQuickViewLoad() {
            $.ajax({
                url: '/Home/GetModalPartial',
                contentType: 'application/html; charset=utf-8',
                type: 'GET',
                dataType: 'html',

                success: function (result) {
                    $('.modalquickview').empty();
                    $('.modalquickview').append(result);

                },
                error: function (xhr, status) {
                    alert(status);
                }
            })


        }
        async function ModalQuickView(productId) {

            console.log(productId)
            let checkajax = await $.ajax({
                url: "/Home/QuickView",
                type: "Post",
                data: {
                    id: parseInt(productId)
                },
                success: function () {
                    //  let resobject = jQuery.parseJSON(data);
                    console.log("success AddtoCart")
                },
                error: function () {
                    alert('Failed to receive the Data');
                    console.log('Failed ');
                }
            });
            if (checkajax) ModalQuickViewLoad();
        }

        function ShopCategoryLoad() {
            console.log("aaaaa");
            $.ajax({
                url: '/Home/GetShopCategory',
                contentType: 'application/html; charset=utf-8',
                type: 'GET',
                dataType: 'html',

                success: function (result) {
                    $('.shopcategoryChng').empty();
                    $('.shopcategoryChng').append(result);

                },
                error: function (xhr, status) {
                    alert(status);
                }
            })


        }
        async function ShopCategoryChange(categoryId) {

            console.log(categoryId)
            let checkajax = await $.ajax({
                url: "/Home/ShopCategory",
                type: "Post",
                data: {
                    id: parseInt(categoryId)
                },
                success: function () {
                    //  let resobject = jQuery.parseJSON(data);
                    console.log("success AddtoCart")
                },
                error: function () {
                    alert('Failed to receive the Data');
                    console.log('Failed ');
                }
            });
            if (checkajax) ShopCategoryLoad();
        }

        $('#shortId').on('change', function () {
            console.log(this.value)
            ShopSortProducts(this.value);
        });

        async function ShopSortProducts(sortvalue) {

            console.log(sortvalue)
            let checkajax = await $.ajax({
                url: "/Home/ShopProdductSort",
                type: "Post",
                data: {
                    value: parseInt(sortvalue)
                },
                success: function () {
                    //  let resobject = jQuery.parseJSON(data);
                    console.log("success AddtoCart")
                },
                error: function () {
                    alert('Failed to receive the Data');
                    console.log('Failed ');
                }
            });
            if (checkajax) ShopCategoryLoad();
        }

       //888888888888888888888888888888888888888888888888888888888888888888888888888888888888

        async function ShopFilterProducts() {
            var filter = $("#amount").val();
            console.log(filter)

            let checkajax = await $.ajax({
                url: "/Home/Filter",
                type: "Post",
                data: {
                    text: filter.toString()
                },
                success: function () {
                    //  let resobject = jQuery.parseJSON(data);
                    console.log("111111111111");
                    console.log("success AddtoCart")
                },
                error: function () {
                    alert('Failed to receive the Data');
                    console.log('Failed ');
                }
            });
            if (checkajax) {
                ShopCategoryLoad();
            }
            else {
                ShopCategoryLoad();
            }
        }




    </script>

 
}